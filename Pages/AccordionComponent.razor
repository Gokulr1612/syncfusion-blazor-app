@page "/accordion"

@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons

<SfAccordion @ref="AccordionObj" @bind-ExpandedIndices="ExpandItems" ExpandMode="ExpandMode.Single">
    <AccordionEvents Created="CreatedHandler" Expanding="OnExpanding" Collapsing="OnCollapsing" Expanded="AccordionExpanded" Collapsed="AccordionCollapsed"></AccordionEvents>
    <AccordionItems>
        @for (var i = 0; i < AccordionItems.Count; i++)
        {
            var Item = AccordionItems[i];
            var accIndex = i;
            <AccordionItem>

                <HeaderTemplate>
                    @if (i < AccordionItems.Count && AccordionObj?.Items[i].Expanded != false)
                    {
                        <SfButton @ref="TemplateButton" id="accIndex" @onclick="(e) => Toggle(e, accIndex)" Content="Collapse"></SfButton>
                    }
                    else
                    {
                        <SfButton @ref="TemplateButton" id="accIndex" @onclick="(e) => Toggle(e, accIndex)" Content="Expand"></SfButton>
                    }
                </HeaderTemplate>
                <ContentTemplate>
                    <div>
                        <div><b>Employee ID: </b>@Item.EmployeeId</div>
                        <div><b>Designation: </b>@Item.Designation</div>
                    </div>
                </ContentTemplate>
            </AccordionItem>
        }
    </AccordionItems>
</SfAccordion>

@code
{
    SfAccordion? AccordionObj;
    SfButton? TemplateButton;
    /// <summary>
    /// This member defines the indexes of the Items that needs to be expanded on Initial render.
    /// </summary>
    public int[] ExpandItems = new int[] { }; // Expand the first and third items
    public bool IsItemExpanded;
    public bool IsButton = false;
    public string ButtonContent = "Expand";
    public string ButtonText = "OnClick";
    public List<Countries> Country = new List<Countries>() {
        new Countries(){ CountryName= "Australia", CountryId= "2" },
        new Countries(){ CountryName= "United States", CountryId= "1" },
    };

    public class Countries
    {
        public string? CountryName { get; set; }
        public string? CountryId { get; set; }
    }

    List<AccordionData> AccordionItems = new List<AccordionData>()
    {
        new AccordionData
        {
            EmployeeId = 1,
            EmployeeName = "Laura Callahan",
            Designation = "Product Manager",
        },
        new AccordionData
        {
            EmployeeId = 3,
            EmployeeName = "Andrew Fuller",
            Designation = "Team Lead",
        },
        new AccordionData
        {
            EmployeeId = 4,
            EmployeeName = "Anne Dodsworth",
            Designation = "Developer"
        },
        new AccordionData
        {
            EmployeeId = 5,
            EmployeeName = "Nancy Davolio",
            Designation = "Product Manager"
        }
    };

    public class AccordionData
    {
        public string? EmployeeName { get; set; }
        public int EmployeeId { get; set; }
        public string? Designation { get; set; }
    }

    /// <summary>
    /// This method prevents the Expansion of the Accordion Item on click of the Header or Arrows.
    /// </summary>
    /// <param name="args"></param>
    public void OnExpanding(ExpandEventArgs args)
    {
        if (!IsButton)
        {
            args.Cancel = true;
        }
    }

    /// <summary>
    /// This method prevents the Collapsing of the Accordion Item when clicked on the Header or Arrows
    /// </summary>
    /// <param name="args"></param>
    public void OnCollapsing(CollapseEventArgs args)
    {
        if (!IsButton)
        {
            args.Cancel = true;
        }
    }

    public void AccordionExpanded(ExpandedEventArgs args)
    {
        IsButton = false;
    }

    public void AccordionCollapsed(CollapsedEventArgs args)
    {
        IsButton = false;
    }

    /// <summary>
    /// This method is used to Toggle the Accordion on Button Click in the Header.
    /// </summary>
    /// <param name="e">Mouse Event Args</param>
    /// <param name="accindex">Accordion Item Index obtained from the Header Template Button Click</param>
    public void Toggle(MouseEventArgs e, int accindex)
    {
        IsButton = true;
        // var accordionItemToBeExpanded = accordionIndex;
        // if(buttonObj.Content.Equals("Expand"))
        // {
        // this.ButtonContent = "Collapse";

        // buttonObj.Content = "Collapse";
        // } else
        // {
        // this.ButtonContent = "Expand";
        // }
        ExpandItems[0] = accindex;
        // IsItemExpanded = ExpandItems.Length > 0 ? true : false;
        // IsItemExpanded =

        // StateHasChanged();
        // AccordionObj?.Items[accindex].Expanded = true;
    }

    public void CreatedHandler()
    {
        // IsItemExpanded = ExpandItems.Length > 0 ? true : false;
    }
}
